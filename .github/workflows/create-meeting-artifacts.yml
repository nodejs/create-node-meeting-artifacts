name: Create Meeting Artifacts

on:
  workflow_dispatch:
    inputs:
      meeting_group:
        description: 'Meeting group to create artifacts for'
        required: true
        type: string
      dry_run:
        type: boolean
        description: 'Dry run?'
        default: false
        required: true
  workflow_call:
    inputs:
      meeting_group:
        description: 'Meeting group to create artifacts for'
        required: true
        type: string
      dry_run:
        type: boolean
        description: 'Dry run?'
        default: false
        required: true

env:
  GROUP: ${{ github.event.inputs.meeting_group }}

jobs:
  create-artifacts:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Setup Node.js
        uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4.0.3
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Read Meeting Variables
        id: read-vars
        run: echo "user=$(jq -r '.github.owner' "configs/$GROUP.json")" >> $GITHUB_OUTPUT

      - name: Create GitHub App Token
        uses: actions/create-github-app-token@67018539274d69449ef7c02e8e71183d1719ab42 # v2.1.4
        id: app-token
        with:
          app-id: ${{ secrets.BOT_ID }}
          private-key: ${{ secrets.BOT_PRIVATE_KEY }}
          owner: ${{ steps.read-vars.outputs.user }}

      - name: Create meeting artifacts
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
          HACKMD_API_TOKEN: ${{ secrets.HACKMD_API_TOKEN }}
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
        run: npx . $GROUP ${{ github.event.inputs.dry_run && '--dry-run' }}
